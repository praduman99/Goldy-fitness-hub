{"version":3,"sources":["logo.svg","Authentication/Authentication_page.js","assets/images/logo.png","Navigation/Navbar.js","ReusableComponents/ScrollToTop.js","assets/images/img2.jpg","assets/images/img4.jpg","assets/images/img5.jpg","assets/images/img6.jpg","assets/images/img3.jpg","assets/images/goldysir.jpeg","assets/images/rohitsir.png","Pages/Homepage.js","Navigation/NavbarRouterdom.js","App.js","reportWebVitals.js","index.js"],"names":["Option","Select","Authentication_page","useState","formtype","setFormtype","Form","useForm","form","autoCompleteResult","setAutoCompleteResult","show","message","alert","setAlert","onFinish","values","console","log","prefixSelector","Item","name","noStyle","style","width","value","websiteOptions","map","website","label","justify","marginTop","type","scrollToFirstError","span","className","initialValues","remember","rules","required","prefix","UserOutlined","placeholder","LockOutlined","formAction","onClick","residence","hasFeedback","Password","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","tooltip","whitespace","addonBefore","options","onChange","domain","extra","gutter","navitems","color","fontFamily","lineHeight","fontWeight","dropdownmenu","padding","fontSize","Navbar","props","drawer","setDrawer","open","drawer_Authentication","setDrawer_Authentication","drawer_Explore","setDrawer_Explore","getWindowDimensions","windowDimensions","setWindowDimensions","window","innerWidth","height","innerHeight","useEffect","handleResize","addEventListener","removeEventListener","margin","position","zIndex","background","marginBottom","src","logo","to","textAlign","paddingLeft","MenuOutlined","visible","placement","onClose","closeIcon","bodyStyle","backgroundColor","ScrollToTop","pathname","useLocation","scrollTo","Meta","Card","Homepage","display","justifyContent","paddingBottom","animation","cover","alt","goldysir","actions","SettingOutlined","EditOutlined","EllipsisOutlined","avatar","title","description","Rohitsir","autoplay","pauseOnHover","dots","img2","img4","img5","img6","img","indx","top","left","opacity","preview","NavbarRouterdom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4d3ea30.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport './Authentication.css'\r\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete, Alert, message } from 'antd';\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n// const residences = [\r\n//     {\r\n//         value: 'zhejiang',\r\n//         label: 'Zhejiang',\r\n//         children: [\r\n//             {\r\n//                 value: 'hangzhou',\r\n//                 label: 'Hangzhou',\r\n//                 children: [\r\n//                     {\r\n//                         value: 'xihu',\r\n//                         label: 'West Lake',\r\n//                     },\r\n//                 ],\r\n//             },\r\n//         ],\r\n//     },\r\n//     {\r\n//         value: 'jiangsu',\r\n//         label: 'Jiangsu',\r\n//         children: [\r\n//             {\r\n//                 value: 'nanjing',\r\n//                 label: 'Nanjing',\r\n//                 children: [\r\n//                     {\r\n//                         value: 'zhonghuamen',\r\n//                         label: 'Zhong Hua Men',\r\n//                     },\r\n//                 ],\r\n//             },\r\n//         ],\r\n//     },\r\n// ];\r\n\r\n\r\nconst Authentication_page = () => {\r\n    const [formtype, setFormtype] = useState(false)\r\n    const [form] = Form.useForm();\r\n\r\n    const [autoCompleteResult, setAutoCompleteResult] = useState([])\r\n    const [alert, setAlert] = useState({ show: false, message: \"\" })\r\n\r\n    const onFinish = (values) => {\r\n        console.log(values)\r\n        // const result = auth.createUserWithEmailAndPassword(values.email, values.password)\r\n        //     .then(() => { setAlert({show:true,message:\"your account created\"}) ;setFormtype(false) })\r\n        //     .catch(err => {\r\n        //         setAlert({show:true,message:err.message})\r\n        //     })\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n            <Select\r\n                style={{\r\n                    width: 70,\r\n                }}\r\n            >\r\n                <Option value=\"86\">+86</Option>\r\n                <Option value=\"87\">+87</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n\r\n    const onWebsiteChange = (value) => {\r\n        if (!value) {\r\n            setAutoCompleteResult([]);\r\n        } else {\r\n            setAutoCompleteResult(['.com', '.org', '.net'].map((domain) => `${value}${domain}`));\r\n        }\r\n    };\r\n\r\n    const websiteOptions = autoCompleteResult.map((website) => ({\r\n        label: website,\r\n        value: website,\r\n    }));\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Row justify=\"center\" style={{ marginTop: formtype == false ? \"10rem\" : \"3rem\" }}>\r\n             {alert.show == true ? <Alert message={alert.message} type=\"success\" scrollToFirstError />:null}\r\n           \r\n            <Col span={20}>\r\n                <Row><h1>{formtype == false ? \"Login\" : \"Signup\"}</h1></Row>\r\n                {formtype == false ?\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        className=\"login-form\"\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={onFinish}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your Username!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your Password!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <span className=\"text\">Forgot password</span>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <button formAction={\"submit\"} className=\"formbutton\">login</button>\r\n\r\n                            Or <span className=\"text\" onClick={() => { setFormtype(!formtype) }}>Register now!</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    :\r\n                    <div>\r\n                        \r\n                        <Form\r\n\r\n                            form={form}\r\n                            name=\"register\"\r\n                            onFinish={onFinish}\r\n                    \r\n                            initialValues={{\r\n                                residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n                                prefix: '86',\r\n                            }}\r\n                            scrollToFirstError\r\n                        >\r\n                            <Form.Item\r\n                                name=\"email\"\r\n                                label=\"E-mail\"\r\n                                rules={[\r\n                                    {\r\n                                        type: 'email',\r\n                                        message: 'The input is not valid E-mail!',\r\n                                    },\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your E-mail!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your password!',\r\n                                    },\r\n                                ]}\r\n                                hasFeedback\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"confirm\"\r\n                                label=\"Confirm Password\"\r\n                                dependencies={['password']}\r\n                                hasFeedback\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please confirm your password!',\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                        validator(_, value) {\r\n                                            if (!value || getFieldValue('password') === value) {\r\n                                                return Promise.resolve();\r\n                                            }\r\n\r\n                                            return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                                        },\r\n                                    }),\r\n                                ]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"nickname\"\r\n                                label=\"Nickname\"\r\n                                tooltip=\"What do you want others to call you?\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your nickname!',\r\n                                        whitespace: true,\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n\r\n                            {/* <Form.Item\r\n        name=\"residence\"\r\n        label=\"Habitual Residence\"\r\n        rules={[\r\n          {\r\n            type: 'array',\r\n            required: true,\r\n            message: 'Please select your habitual residence!',\r\n          },\r\n        ]}\r\n      >\r\n        <Cascader options={residences} />\r\n      </Form.Item> */}\r\n\r\n                            <Form.Item\r\n                                name=\"phone\"\r\n                                label=\"Phone Number\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your phone number!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input\r\n                                    addonBefore={prefixSelector}\r\n                                    style={{\r\n                                        width: '100%',\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"website\"\r\n                                label=\"Website\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input website!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <AutoComplete options={websiteOptions} onChange={onWebsiteChange} placeholder=\"website\">\r\n                                    <Input />\r\n                                </AutoComplete>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"gender\"\r\n                                label=\"Gender\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please select gender!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select placeholder=\"select your gender\">\r\n                                    <Option value=\"male\">Male</Option>\r\n                                    <Option value=\"female\">Female</Option>\r\n                                    <Option value=\"other\">Other</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n                                <Row gutter={8}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item\r\n                                            name=\"captcha\"\r\n                                            noStyle\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Please input the captcha you got!',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Button>Get captcha</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form.Item>\r\n                            {/* \r\n      <Form.Item\r\n        name=\"agreement\"\r\n        valuePropName=\"checked\"\r\n        rules={[\r\n          {\r\n            validator: (_, value) =>\r\n              value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n          },\r\n        ]}\r\n        {...tailFormItemLayout}\r\n      >\r\n        <Checkbox>\r\n          I have read the <a href=\"\">agreement</a>\r\n        </Checkbox>\r\n      </Form.Item> */}\r\n                            <Form.Item>\r\n                                <button formAction={\"submit\"}className=\"formbutton\">Signup</button>\r\n                                <span className=\"text\" onClick={() => { setFormtype(!formtype);setAlert({show:false,message:\"\"}) }}>Login here!</span>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                }\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Authentication_page","export default __webpack_public_path__ + \"static/media/logo.514d9aa4.png\";","import { Col, Drawer, Image, Row } from 'antd';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { MenuOutlined, HomeFilled } from '@ant-design/icons';\r\nimport { div } from 'react-router-dom';\r\nimport Authentication_page from '../Authentication/Authentication_page';\r\nimport logo from '../assets/images/logo.png'\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\n\r\n\r\n// navbar styling\r\nconst navitems = {\r\n    color: \"black\",\r\n    fontFamily: \"Helvetica\",\r\n    lineHeight: \"3rem\",\r\n    fontWeight: \"bold\"\r\n\r\n}\r\n\r\n\r\nconst dropdownmenu = {\r\n    padding: \"1rem\",\r\n    fontSize: \"20px\",\r\n\r\n}\r\n\r\nconst Navbar = (props) => {\r\n    const [drawer, setDrawer] = useState(false);\r\n\r\n    const [drawer_Authentication, setDrawer_Authentication] = useState(props.open)\r\n\r\n    const [drawer_Explore, setDrawer_Explore] = useState(false)\r\n\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n    // get window dimensions\r\n    function getWindowDimensions() {\r\n        const { innerWidth: width, innerHeight: height } = window;\r\n        return {\r\n            width,\r\n            height\r\n        };\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n\r\n    const onClose = () => {\r\n        setDrawer(false);\r\n\r\n    };\r\n    const onClose_Authentication = () => {\r\n        setDrawer_Authentication(false)\r\n    }\r\n    const onClose_Explore = () => {\r\n        setDrawer_Explore(false)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Row style={{ margin: 0, padding: \"10px 10px 0px 10px\", position: \"fixed\", width: \"100%\", zIndex: \"999\", background: \"white\", marginBottom: \"2rem\" }}>\r\n                <Col span={4}>\r\n                 \r\n           <Image src={logo} width='150px' height='50px' />\r\n                    \r\n                </Col>\r\n                {windowDimensions.width >= 720 ?\r\n                    <Col span={20}>\r\n                        <Row>\r\n                            <Col span={3} >\r\n                                <Link to='/' style={navitems} >Home</Link>\r\n                            </Col>\r\n                            <Col span={3} >\r\n                                <div style={navitems} onClick={() => setDrawer_Explore(true)}>Explore</div>\r\n                            </Col>\r\n                            <Col span={3} >\r\n                                <Link to='Categories' style={navitems} >online gym</Link>\r\n                            </Col>\r\n                            <Col span={3} >\r\n                                <Link to='' style={navitems} >Champianships</Link>\r\n                            </Col>\r\n                            <Col span={3} >\r\n                                <Link to='/About' style={navitems}>About</Link>\r\n                            </Col>\r\n                            <Col span={6} style={{ textAlign: \"Right\" }}>\r\n                                <div style={navitems} onClick={() => setDrawer_Authentication(true)}>Login/Signup</div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    :\r\n                    <Col span={20} style={{ paddingLeft: \"15rem\" }}><MenuOutlined  onClick={() => { setDrawer(true) }} style={{ fontSize: \"2rem\", color: 'black' }}></MenuOutlined></Col>\r\n                }\r\n\r\n            </Row>\r\n            <Drawer\r\n\r\n                visible={drawer}\r\n                placement={'bottom'}\r\n\r\n                width={\"100%\"}\r\n                height={\"auto\"}\r\n                onClose={onClose}\r\n                closeIcon={false}\r\n                style={{ textAlign: \"center\" }}\r\n                bodyStyle={{ backgroundColor: 'white' }}\r\n\r\n            >\r\n                <div style={{ textAlign: \"center\", marginTop: \"0rem\" }}>\r\n                    <Col style={dropdownmenu}>\r\n                        <Link to='/' onClick={() => setDrawer(false)} style={navitems} >Home</Link>\r\n                    </Col>\r\n                    <Col style={dropdownmenu}>\r\n                        <div onClick={() => { setDrawer_Explore(true); setDrawer(false) }} style={navitems} >Explore</div>\r\n                    </Col>\r\n                    <Col style={dropdownmenu}>\r\n                        <Link to='/Categories' onClick={() => setDrawer(false)} style={navitems}>Categories</Link>\r\n                    </Col>\r\n                    <Col style={dropdownmenu}>\r\n                        <div onClick={() => setDrawer(false)} style={navitems}>Become a Seller</div>\r\n                    </Col>\r\n                    <Col style={dropdownmenu}>\r\n                        <Link to='/About' onClick={() => setDrawer(false)} style={navitems} >About</Link></Col>\r\n                    <Col style={dropdownmenu}>\r\n                        <div onClick={() => { setDrawer_Authentication(true); setDrawer(false) }} style={navitems} >Login/Signup</div>\r\n                    </Col>\r\n                </div>\r\n            </Drawer>\r\n            <Drawer\r\n                placement={'right'}\r\n                onClose={onClose_Authentication}\r\n                visible={drawer_Authentication}\r\n                width={windowDimensions.width >= 720 ? \"30%\" : \"100%\"}\r\n                height={\"auto\"}\r\n            >\r\n                <Authentication_page />\r\n\r\n            </Drawer>\r\n            <Drawer\r\n                placement={'bottom'}\r\n                onClose={onClose_Explore}\r\n                visible={drawer_Explore}\r\n                width={\"auto\"}\r\n\r\n                height={windowDimensions.width >= 720 ? \"80%\" : \"100%\"}\r\n            >\r\n\r\n\r\n            </Drawer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default ScrollToTop","export default __webpack_public_path__ + \"static/media/img2.8464c35f.jpg\";","export default __webpack_public_path__ + \"static/media/img4.7332e136.jpg\";","export default __webpack_public_path__ + \"static/media/img5.f7c56bd6.jpg\";","export default __webpack_public_path__ + \"static/media/img6.18286314.jpg\";","export default __webpack_public_path__ + \"static/media/img3.69b8e7ba.jpg\";","export default __webpack_public_path__ + \"static/media/goldysir.c62a7295.jpeg\";","export default __webpack_public_path__ + \"static/media/rohitsir.61df9f13.png\";","import React from 'react'\r\nimport { Carousel, Image, Row, Col,Divider } from 'antd';\r\nimport 'animate.css';\r\nimport img2 from '../assets/images/img2.jpg'\r\n\r\nimport img4 from '../assets/images/img4.jpg'\r\n\r\nimport img5 from '../assets/images/img5.jpg'\r\nimport img3 from '../assets/images/img3.jpg'\r\n\r\nimport img6 from '../assets/images/img6.jpg'\r\nimport goldysir from '../assets/images/goldysir.jpeg'\r\n\r\nimport Rohitsir from '../assets/images/rohitsir.png'\r\nimport { Card, Avatar } from 'antd';\r\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\r\n\r\nimport './style.css'\r\n\r\n\r\nconst { Meta } = Card;\r\nconst Homepage = () => {\r\n\r\n\r\n    const contentStyle = {\r\n        color: '#fff',\r\n\r\n        textAlign: 'center',\r\n        background: '#364d79',\r\n        position: \"absolute\"\r\n    };\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h3 style={contentStyle}>RV-FITNESS</h3>\r\n                \r\n                <div className=\"Header_Container\">\r\n                <Row justify=\"center\">\r\n                                <div>\r\n                                    <h1 className=\"Header_heading animate__animated animate__bounceInUp\"> Be Stronger Than Your Excuse !</h1>\r\n                                    <Divider type=\"horizontal\" style={{ color: \"darkorange\", fontWeight: \"900\", fontSize: \"2rem\" }}>___________</Divider>\r\n                                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                        <p className=\"Heading_Text  animate__animated animate__bounceInDown\" >Affordable Best Freelance Music Producer & Composer and many more Services. Hire a Best Music Frelancer today and get your dreams true by making creating music projects.</p>\r\n                                    </div>\r\n                                    <div style={{ textAlign: \"center\", paddingBottom: \"10rem\" }}>\r\n                                        {/* <Link to=\"Categories\">\r\n                                            <button className=\"Heading_Button\"\r\n                                            >Start You search Now ! </button>\r\n                                        </Link> */}\r\n                                    </div>\r\n                                </div>\r\n                            </Row>\r\n                </div>\r\n                {/* <Image src={img5} className=\"Header_Container\"  width={'100%'}/> */}\r\n            </div>\r\n            <div>\r\n                <h1 style={{ animation: \"animate__bounceInLeft\", textAlign: 'center' }}>Trainers</h1>\r\n                <div>\r\n                    <Row justify={'center'} gutter={50}>\r\n                        <Col  className=\"animate__animated animate__backInRight \">\r\n                            <Card\r\n                            className=\" animate__animated animate__pulse\"\r\n                                style={{ width: '18rem' }}\r\n                                cover={\r\n                                    <img\r\n                                        alt=\"example\"\r\n                                        src={goldysir}\r\n                                    />\r\n                                }\r\n                                actions={[\r\n                                    <SettingOutlined key=\"setting\" />,\r\n                                    <EditOutlined key=\"edit\" />,\r\n                                    <EllipsisOutlined key=\"ellipsis\" />,\r\n                                ]}\r\n                            >\r\n                                <Meta\r\n                                    avatar={<Avatar src={goldysir} />}\r\n                                    title=\"Goldy\"\r\n                                    description=\"This is the description\"\r\n                                />\r\n                            </Card>,\r\n                        </Col>\r\n                        <Col className=\"animate__animated animate__backInLeft \">\r\n                            <Card\r\n                              className=\" animate__animated animate__pulse\"\r\n                                style={{ width: '18rem' }}\r\n                                cover={\r\n                                    <img\r\n                                        alt=\"example\"\r\n                                        src={Rohitsir}\r\n                                    />\r\n                                }\r\n                                actions={[\r\n                                    <SettingOutlined key=\"setting\" />,\r\n                                    <EditOutlined key=\"edit\" />,\r\n                                    <EllipsisOutlined key=\"ellipsis\" />,\r\n                                ]}\r\n                            >\r\n                                <Meta\r\n                                    avatar={<Avatar src={Rohitsir} />}\r\n                                    title=\"Rohit\"\r\n                                    description=\"This is the description\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row justify=\"center\" >\r\n                    \r\n    \r\n                        <h1 className=\"hompage_jmbotron\">One Day or Day One You decide   </h1>\r\n\r\n                    </Row>\r\n                    <Row gutter={20}justify={'center'}>\r\n\r\n                                   \r\n                        <h1 className=\"animate__animated animate__bounce animate__infinite\tinfinite\">\r\n                          Some Of Trained  Students\r\n                        </h1>\r\n                       \r\n                        <Col span={24}>\r\n                        <Carousel autoplay pauseOnHover={false} dots={false}>\r\n\r\n                    {[img2, img4, img5, img6].map((img, indx) => {\r\n                        return (<div key={indx} style={{ top: 0, left: 0, background: 'black', opacity: \".5\" }}>\r\n                            <Image src={img} preview={false} height='auto' width=\"100%\" style={{ position: \"center\" }} />\r\n                        </div>)\r\n                    })}\r\n\r\n                </Carousel>\r\n                </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","\r\nimport React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Footer from '../Pages/Footer'\r\n\r\nimport Navbar from '../Navigation/Navbar'\r\n\r\nimport ScrollToTop from '../ReusableComponents/ScrollToTop'\r\nimport Homepage from '../Pages/Homepage';\r\n\r\n\r\nconst NavbarRouterdom = (props) => {\r\n    return (\r\n        <Router>\r\n            <ScrollToTop />\r\n            <Navbar />\r\n            <Homepage />\r\n\r\n\r\n            {/* \r\n            <Footer /> */}\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default NavbarRouterdom\r\n","import logo from './logo.svg';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport NavbarRouterdom from './Navigation/NavbarRouterdom';\nfunction App() {\n  return (\n    <div>\n      <NavbarRouterdom/>  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}